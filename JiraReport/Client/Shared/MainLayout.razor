@inherits Fluxor.Blazor.Web.Components.FluxorLayout

<MudThemeProvider @ref="@_mudThemeProvider" @bind-IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1" Class="d-print-none">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">Jira Report</MudText>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Class="d-print-none">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-5 mb-5">
            @if (ExceptionsState.Value.Exceptions.Any())
            {
                @foreach (var item in ExceptionsState.Value.Exceptions)
                {
                    <MudAlert Severity="Severity.Error">@item.Message</MudAlert>
                    <MudAlert Severity="Severity.Error">@item.StackTrace</MudAlert>
                }
            }
            else
            {
                <ErrorBoundary>
                    <ChildContent>
                        @Body
                    </ChildContent>
                    <ErrorContent Context="ex">
                        <MudAlert>@ex.Message</MudAlert>
                        <MudAlert>@ex.StackTrace</MudAlert>
                    </ErrorContent>
                </ErrorBoundary>
            }
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }
}