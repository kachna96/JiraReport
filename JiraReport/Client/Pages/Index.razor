@page "/"
@using JiraReport.Shared
@using TeixeiraSoftware.Finance
@inherits Fluxor.Blazor.Web.Components.FluxorComponent

<PageTitle>Jira Report</PageTitle>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudPaper Class="pa-4">
            <MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
                <MudDateRangePicker DateRangeChanged="DateRangeChanged" DateRange="JiraIssuesFilterState.Value.DateRange" Label="Date range" />
                <MudTextField @bind-Value="JiraIssuesFilterState.Value.Name" T="string" Label="Name" Required="true" RequiredError="Contractor name is required!" />
                <MudTextField @bind-Value="JiraIssuesFilterState.Value.ContractorId" T="string" Label="Contractor Id" Required="true" RequiredError="Contractor ID is required!" />
                <MudTextField @bind-Value="JiraIssuesFilterState.Value.TaxId" T="string" Label="Tax Id" Required="true" RequiredError="Tax ID is required!" />
                <MudTextField @bind-Value="JiraIssuesFilterState.Value.Residence" T="string" Label="Residence" Required="true" RequiredError="Residence is required!" />
                <MudTextField ValueChanged="HourRateValueChanged" Format="N2" Value="JiraIssuesFilterState.Value.HourRate" T="decimal" Label="Hour rate" Required="true" RequiredError="Hour rate is required!" Adornment="Adornment.Start" AdornmentText="@JiraIssuesFilterState.Value.SelectedCurrency" />
                <MudTextField ValueChanged="TotalPriceValueChanged" Format="N2" Value="JiraIssuesFilterState.Value.TotalPrice" T="decimal" Label="Total amount due" Required="true" RequiredError="Total amount due is required!" Adornment="Adornment.Start" AdornmentText="@JiraIssuesFilterState.Value.SelectedCurrency" />
                <MudSelect T="string" Label="Currency" @bind-Value="JiraIssuesFilterState.Value.SelectedCurrency" AnchorOrigin="Origin.BottomCenter">
                    @foreach (var item in JiraIssuesFilterState.Value.Currencies)
                    {
                        <MudSelectItem Value="@item.Symbol">@item.Symbol @item.Name</MudSelectItem>
                    }
                </MudSelect>
                <div class="d-flex align-center justify-space-end mt-6">
                    <MudButton Variant="Variant.Filled" Color="Color.Default" Class="ml-auto" OnClick="@SaveFiltersToLocalStorageAsync">Save Values</MudButton>
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" Class="ml-2" OnClick="@FetchJiraIssuesAsync">Continue</MudButton>
                </div>
            </MudForm>
        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="5">
        <MudPaper Class="pa-4 mud-height-full">
            <MudText Typo="Typo.subtitle2">@($"Errors ({errors.Length})")</MudText>
            @foreach (var error in errors)
            {
                <MudText Color="@Color.Error">@error</MudText>
            }
        </MudPaper>
    </MudItem>
</MudGrid>

@if (JiraIssuesState.Value.Loading)
{
    <MudItem Class="d-flex justify-center xs-12">
        <MudProgressCircular Color="Color.Primary" Indeterminate="true" Size="Size.Large" Class="align-self-center mt-5" />
    </MudItem>
}
else if (JiraIssuesState.Value.Initialized)
{
    <MudTable T=JiraIssue RowEditCommit="ItemHasBeenCommitted" Items="JiraIssuesState.Value.Issues" Striped="true" Bordered="true" CustomFooter="true" Hover="true" MultiSelection="true" SelectedItemsChanged="SelectedItemsChanged" SelectedItems="JiraIssuesState.Value.SelectedIssues" CanCancelEdit="true">
        <HeaderContent>
            <MudTh>Project</MudTh>
            <MudTh>Key</MudTh>
            <MudTh>Type</MudTh>
            <MudTh>Summary</MudTh>
            <MudTh>Status</MudTh>
            <MudTh>Reporter</MudTh>
            <MudTh>Seconds</MudTh>
            <MudTh>Hours</MudTh>
            <MudTh>Padded Hours</MudTh>
            <MudTh>Price</MudTh>
            <MudTh>Bonus</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Project" Class="@GetTdClass(context.Key)">@context.Project</MudTd>
            <MudTd DataLabel="Key" Class="@GetTdClass(context.Key)"><MudLink Href="@context.Uri.OriginalString" Target="_blank"><b>@context.Key</b></MudLink></MudTd>
            <MudTd DataLabel="Type" Class="@GetTdClass(context.Key)">@context.IssueType</MudTd>
            <MudTd DataLabel="Summary" Class="@GetTdClass(context.Key)"><b>@context.Summary</b></MudTd>
            <MudTd DataLabel="Status" Class="@GetTdClass(context.Key)">@context.Status</MudTd>
            <MudTd DataLabel="Reporter" Class="@GetTdClass(context.Key)">@context.Reporter</MudTd>
            <MudTd DataLabel="Seconds" Class="@GetTdClass(context.Key)">@context.TimeSpendInSeconds</MudTd>
            <MudTd DataLabel="Hours" Class="@GetTdClass(context.Key)">@context.TimeSpendInHours</MudTd>
            <MudTd DataLabel="PaddedHours" Class="@GetTdClass(context.Key)"><b>@(Math.Round(ExtraHours.FirstOrDefault(x => x.Key == context.Key).Hours, 2))</b></MudTd>
            <MudTd DataLabel="Price" Class="@GetTdClass(context.Key)">
                <b>@(String.Format("{0:N2}", (ExtraHours.FirstOrDefault(x => x.Key == context.Key).Hours) * (double)JiraIssuesFilterState.Value.HourRate))</b>
            </MudTd>
            <MudTd DataLabel="Bonus" Class="@GetTdClass(context.Key)"><MudCheckBox @bind-Checked="@context.Checked" Disabled="@(!JiraIssuesState.Value.SelectedIssues.Any(x => x.Key == context.Key))" Color="Color.Primary" /></MudTd>
        </RowTemplate>
        <RowEditingTemplate>
            <MudTd DataLabel="Project" Class="@GetTdClass(context.Key)">@context.Project</MudTd>
            <MudTd DataLabel="Key" Class="@GetTdClass(context.Key)"><MudLink Href="@context.Uri.OriginalString" Target="_blank">@context.Key</MudLink></MudTd>
            <MudTd DataLabel="Type" Class="@GetTdClass(context.Key)">@context.IssueType</MudTd>
            <MudTd DataLabel="Summary" Class="@GetTdClass(context.Key)">@context.Summary</MudTd>
            <MudTd DataLabel="Status" Class="@GetTdClass(context.Key)">@context.Status</MudTd>
            <MudTd DataLabel="Reporter" Class="@GetTdClass(context.Key)">@context.Reporter</MudTd>
            <MudTd DataLabel="Seconds" Class="@GetTdClass(context.Key)">@context.TimeSpendInSeconds</MudTd>
            <MudTd DataLabel="Hours" Class="@GetTdClass(context.Key)"><MudNumericField T="double" @bind-Value="context.TimeSpendInHours" Min="0" /></MudTd>
            <MudTd DataLabel="PaddedHours" Class="@GetTdClass(context.Key)">@(Math.Round(ExtraHours.FirstOrDefault(x => x.Key == context.Key).Hours, 2))</MudTd>
            <MudTd DataLabel="Price" Class="@GetTdClass(context.Key)">@(String.Format("{0:N2}", context.TimeSpendInHours * (double)JiraIssuesFilterState.Value.HourRate))</MudTd>
            <MudTd DataLabel="Bonus"><MudCheckBox @bind-Checked="@context.Checked" Disabled="@(!JiraIssuesState.Value.SelectedIssues.Any(x => x.Key == context.Key))" Color="Color.Primary" /></MudTd>
        </RowEditingTemplate>
        <FooterContent>
            <MudTFootRow Class="bold-text">
                <MudTd></MudTd>
                <MudTd></MudTd>
                <MudTd></MudTd>
                <MudTd></MudTd>
                <MudTd></MudTd>
                <MudTd></MudTd>
                <MudTd>@(JiraIssuesState.Value.SelectedIssues.Sum(x => x.TimeSpendInSeconds))s</MudTd>
                <MudTd>@(JiraIssuesState.Value.SelectedIssues.Sum(x => x.TimeSpendInHours))h</MudTd>
                <MudTd><b>@(Math.Round(JiraIssuesState.Value.SelectedIssues.Sum(x => ExtraHours.FirstOrDefault(e => e.Key == x.Key).Hours), 2))</b>h</MudTd>
                <MudTd>
                    <b>@(String.Format("{0:N2}", JiraIssuesState.Value.SelectedIssues.Sum(x => (ExtraHours.FirstOrDefault(e => e.Key == x.Key).Hours) * (double)JiraIssuesFilterState.Value.HourRate)))</b>
                    @JiraIssuesFilterState.Value.SelectedCurrency
                </MudTd>
                <MudTd><MudNumericField @bind-Value="JiraIssuesState.Value.BonusValue" Format="N2" Label="Bonus" Variant="Variant.Text" Adornment="Adornment.Start" AdornmentText="@JiraIssuesFilterState.Value.SelectedCurrency" Min="0" /></MudTd>
            </MudTFootRow>
        </FooterContent>
    </MudTable>
}
